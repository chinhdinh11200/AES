/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aes_at.bm;

import aes.AES_Test;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.util.Scanner;
import javafx.stage.FileChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Admin
 */
public class AES extends javax.swing.JFrame {

    private String fileNameEncode = "C:\\Users\\Admin\\Downloads\\AES\\xauro.txt";
    private String fileNameDecode = "";
    private String key;
    private String iv;
    private String type;
    private String encodeString;
    private String decodeString;
    private byte[] encode;
    AES_Test aes;
    /**
     * Creates new form AES
     */
    public AES() {
        initComponents();
        textIv.setVisible(false);
        labelIv.setVisible(false);
        aes = new AES_Test();
        fileEncode.setText("");
        fileDecode.setText("");
        this.setLocation(600, 300);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        chooseEncode = new javax.swing.JButton();
        btnEnCrypt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textKey = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textEncode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fileEncode = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textLengthKey = new javax.swing.JComboBox<>();
        btnDecrypt = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        timeEncode = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        textDecode = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        timeDecode = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        typeEncrypt = new javax.swing.JComboBox<>();
        labelIv = new javax.swing.JLabel();
        textIv = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        chooseDecode = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        fileDecode = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chooseEncode.setText("Choose file");
        chooseEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseEncodeActionPerformed(evt);
            }
        });

        btnEnCrypt.setText("Mã hóa");
        btnEnCrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnCryptActionPerformed(evt);
            }
        });

        jLabel1.setText("Chọn file");

        textKey.setText("1qaz2wsx3edc4rfv");

        jLabel2.setText("Nhập key");

        jLabel3.setText("Bản mã");

        textEncode.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        fileEncode.setText("fi");

        jLabel6.setText("Độ dài khóa ");

        textLengthKey.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "128", "192", "256" }));
        textLengthKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textLengthKeyActionPerformed(evt);
            }
        });

        btnDecrypt.setText("Giải mã");
        btnDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecryptActionPerformed(evt);
            }
        });

        jLabel7.setText("Thời gian");

        timeEncode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeEncodeActionPerformed(evt);
            }
        });

        jLabel8.setText("Bản rõ");

        textDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDecodeActionPerformed(evt);
            }
        });

        jLabel9.setText("Thời gian");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("Mã hóa AES");

        typeEncrypt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ECB", "CBC" }));
        typeEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeEncryptActionPerformed(evt);
            }
        });

        labelIv.setText("iv");

        textIv.setText("5tgb6yhn7ujm8ik,");
        textIv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIvActionPerformed(evt);
            }
        });

        jLabel12.setText("Loại mã hóa");

        chooseDecode.setText("Choose file");
        chooseDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseDecodeActionPerformed(evt);
            }
        });

        jLabel11.setText("Chọn file");

        fileDecode.setText("fi");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(labelIv, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(typeEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textIv, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textKey, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textLengthKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 16, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timeEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(timeDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(textEncode, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                                        .addComponent(textDecode))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chooseEncode)
                                        .addGap(26, 26, 26)
                                        .addComponent(fileEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chooseDecode)
                                        .addGap(18, 18, 18)
                                        .addComponent(fileDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(101, 101, 101))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnEnCrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(226, 226, 226))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(221, 221, 221))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(421, 421, 421)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chooseEncode)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fileEncode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textLengthKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(2, 2, 2)))
                .addComponent(btnEnCrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textEncode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(timeEncode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(typeEncrypt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textIv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelIv))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDecode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(timeDecode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chooseDecode)
                            .addComponent(fileDecode)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnDecrypt)
                        .addGap(160, 160, 160))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnCryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnCryptActionPerformed
        // TODO add your handling code here:
        textEncode.setText("");
        // get key
        this.key = textKey.getText();
        int keyLenght = Integer.parseInt((String) textLengthKey.getSelectedItem());
        if(this.key.length() < (keyLenght / 8)) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập đủ khóa");
        }
        // get CBC or ECB and iv
        this.type = typeEncrypt.getSelectedItem().toString();
        this.iv = textIv.getText();
        // encrypt
        aes.setStringKey(key);
        
        if(this.type == "ECB") {
            double startTime = System.currentTimeMillis();
            String resultEncode = aes.ECB_encrypt(fileNameEncode);
            double endTime = System.currentTimeMillis();
            timeEncode.setText(((endTime-startTime)/1000) + "s");
            textEncode.setText(resultEncode);
        }else if(this.type == "CBC") {
            double startTime = System.currentTimeMillis();
            String resultEncode = aes.CBC_encrypt(fileNameEncode, iv);
            double endTime = System.currentTimeMillis();
            timeEncode.setText(((endTime-startTime)/1000) + "s");
            textEncode.setText(resultEncode);
        }
        
    }//GEN-LAST:event_btnEnCryptActionPerformed

    private void chooseEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseEncodeActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();

        FileNameExtensionFilter filter = new FileNameExtensionFilter("", "txt", "dat");

        fileChooser.setFileFilter(filter);
        fileChooser.setMultiSelectionEnabled(false);

        int x = fileChooser.showDialog(this, "Chọn File");

        if(x == JFileChooser.APPROVE_OPTION){
            File f = fileChooser.getSelectedFile();

            fileEncode.setText(f.getName());
            
            this.fileNameEncode = f.getAbsolutePath();

        }

    }//GEN-LAST:event_chooseEncodeActionPerformed

    private void textLengthKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textLengthKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textLengthKeyActionPerformed

    private void btnDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecryptActionPerformed
        // TODO add your handling code here:
        textDecode.setText("");
        this.key = textKey.getText();
        int keyLenght = Integer.parseInt((String) textLengthKey.getSelectedItem());
        if(this.key.length() < (keyLenght / 8)) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập đủ khóa");
        }
        // get CBC or ECB and iv
        this.type = typeEncrypt.getSelectedItem().toString();
        this.iv = textIv.getText();
        // encrypt
        aes.setStringKey(key);
        
        if(this.type == "ECB") {
//            fileNameDecode = "C:\\Users\\Admin\\Downloads\\AES\\xaumaECB.txt";
            double startTime = System.currentTimeMillis();
            String resultDecode = aes.ECB_decrypt(fileNameDecode);
            double endTime = System.currentTimeMillis();
            timeDecode.setText(((endTime-startTime)/1000) + "s");
            textDecode.setText(resultDecode);
        }else if(this.type == "CBC") {
//            fileNameDecode = "C:\\Users\\Admin\\Downloads\\AES\\xaumaCBC.txt";
            double startTime = System.currentTimeMillis();
            String resultDecode = aes.CBC_decrypt(fileNameDecode, iv);
            double endTime = System.currentTimeMillis();
            timeDecode.setText(((endTime-startTime)/1000) + "s");
            textDecode.setText(resultDecode);
        }        
    }//GEN-LAST:event_btnDecryptActionPerformed

    private void textDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDecodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDecodeActionPerformed

    private void textIvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIvActionPerformed

    private void chooseDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseDecodeActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();

        FileNameExtensionFilter filter = new FileNameExtensionFilter("", "txt", "dat");

        fileChooser.setFileFilter(filter);
        fileChooser.setMultiSelectionEnabled(false);

        int x = fileChooser.showDialog(this, "Chọn File");

        if(x == JFileChooser.APPROVE_OPTION){
            File f = fileChooser.getSelectedFile();

            fileDecode.setText(f.getName());
            
            this.fileNameDecode = f.getAbsolutePath();

        }
    }//GEN-LAST:event_chooseDecodeActionPerformed

    private void timeEncodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeEncodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeEncodeActionPerformed

    private void typeEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeEncryptActionPerformed
        // TODO add your handling code here:
        if(typeEncrypt.getSelectedItem().toString() == "CBC"){
            labelIv.setVisible(true);
            textIv.setVisible(true);
        }else {
            labelIv.setVisible(false);
            textIv.setVisible(false);
        }
    }//GEN-LAST:event_typeEncryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AES().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnEnCrypt;
    private javax.swing.JButton chooseDecode;
    private javax.swing.JButton chooseEncode;
    private javax.swing.JLabel fileDecode;
    private javax.swing.JLabel fileEncode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel labelIv;
    private javax.swing.JTextField textDecode;
    private javax.swing.JTextField textEncode;
    private javax.swing.JTextField textIv;
    private javax.swing.JTextField textKey;
    private javax.swing.JComboBox<String> textLengthKey;
    private javax.swing.JTextField timeDecode;
    private javax.swing.JTextField timeEncode;
    private javax.swing.JComboBox<String> typeEncrypt;
    // End of variables declaration//GEN-END:variables
}
